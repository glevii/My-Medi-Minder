{"version":3,"sources":["utils/api.js","forms/signUp/signUpForm.js","pages/signUp.js","forms/login/loginForm.js","pages/login.js","pages/profile.js","App.js","registerServiceWorker.js","index.js"],"names":["userData","axios","post","get","SignUpForm","useState","firstName","lastName","email","password","formObject","setformObject","handleInputChange","event","target","name","value","handleFormSubmit","e","console","log","preventDefault","API","then","window","location","href","catch","err","className","onSubmit","htmlFor","onChange","type","placeholder","onClick","SignUp","LoginForm","id","res","Login","Profile","setUser","useEffect","api","user","data","class","src","alt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","isLoggedIn","setIsLoggedIn","isLoading","setIsLoading","exact","path","component","to","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1c900b71.chunk.js","sourcesContent":["import axios from 'axios';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    // User related API calls\n    create: function(userData) {\n        return axios.post('/api/user/signup', userData)\n    },\n    login: (userData)=> {\n        return axios.post('/api/user/login', userData)\n    },\n    currentUser: () => {\n      return axios.get('/api/user/current')\n    },\n    logout: () => {\n      return axios.get('/api/user/logout')\n    },\n} ","import React, { useState } from \"react\";\nimport \"./signUpForm.css\";\nimport API from \"../../utils/api\";\n\n\nfunction SignUpForm() {\n    //establishing form values\n    const [formObject, setformObject] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n    })\n\n    //targeting form values \n    function handleInputChange(event) {\n        const { name, value } = event.target;\n        setformObject({\n            ...formObject,\n            [name]: value\n        })\n    }\n  \n    //upon loging, use API to autheticate user\n    const handleFormSubmit = (e) => {\n        console.log(\"handling submit\");\n        e.preventDefault();\n        if (formObject.email && formObject.password && formObject.firstName) {\n            API.create({\n                firstName: formObject.firstName,\n                lastName: formObject.lastName,\n                email: formObject.email,\n                password: formObject.password,\n            })\n            .then(() => {\n                setformObject({\n                    firstName: \"\",\n                    lastName: \"\",\n                    email: \"\",\n                    password: \"\"\n                })\n                window.location.href = \"/profile\";\n            })\n            .catch(err => console.log(err));\n        } else {\n            console.log(\"missing validation\");\n        }\n    }\n\n    return (\n        <div className=\"imgDiv\">\n            <div className=\"container\">\n                 <div className=\"row\">\n                    <div className=\"col-md-6 col-md-offset-3\">\n                        <h2>Sign Up Form</h2>\n                        <form className=\"signup\" onSubmit={handleFormSubmit}>\n                            <div className=\"form-group name\">\n                                <label htmlFor=\"exampleInputEmail1\">First Name</label>\n                                <input \n                                    onChange={handleInputChange} \n                                    name=\"firstName\"\n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    placeholder=\"Name*\" />\n                            </div>                            \n                            <div className=\"form-group name\">\n                                <label htmlFor=\"exampleInputEmail1\">Last Name</label>\n                                <input \n                                    onChange={handleInputChange} \n                                    name=\"lastName\"\n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    placeholder=\"Name*\" />\n                            </div>\n                            <div className=\"form-group email\">\n                                <label htmlFor=\"exampleInputEmail1\">Email</label>\n                                <input \n                                    onChange={handleInputChange}\n                                    name=\"email\" \n                                    type=\"email\" \n                                    className=\"form-control\"  \n                                    placeholder=\"user@gmail.com.au*\"/>\n                            </div>\n                            <div className=\"form-group password\">\n                                <label htmlFor=\"exampleInputPassword1\">Password</label>\n                                <input \n                                    onChange={handleInputChange}\n                                    name=\"password\" \n                                    type=\"password\" \n                                    className=\"form-control\" \n                                    placeholder=\"Password* (must be longer than 6 characters)\"/>\n                            </div>\n                            <br/>\n                            <button type=\"submit\" className=\"btn btn-default\" onClick={handleFormSubmit}>Sign Up</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SignUpForm;","import React from \"react\";\nimport SignUpForm from \"../forms/signUp/signUpForm\";\n\nfunction SignUp() {\n    return(\n        <div>\n            <SignUpForm />\n        </div>\n    );\n}\n\nexport default SignUp;","import React, { useState } from \"react\";\nimport \"./loginForm.css\";\nimport API from \"../../utils/api\";\n\nfunction LoginForm() {\n    //establishing form values\n    const [formObject, setformObject] = useState({\n        email: \"\",\n        password: \"\"\n    })\n\n    //targeting form values \n    function handleInputChange(event) {\n        const { name, value } = event.target;\n        setformObject({\n            ...formObject,\n            [name]: value\n        })\n    }\n\n    //upon loging, use API to autheticate user\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        if (formObject.email && formObject.password) {\n            API.login({\n                email: formObject.email,\n                password: formObject.password\n            })\n                .then((res) => {\n                    setformObject({\n                        email: \"\",\n                        password: \"\"\n                    })\n                    window.location.href = \"/profile\";\n                })\n                .catch(err => console.log(err));\n        }\n    }\n\n    return (\n        <div className=\"welcome\">\n            <section id=\"home\" className=\"main-banner parallaxie\" >\n                <div className=\"heading\">\n                    <h1>Welcome to My Medi-Tracker</h1>\n                    <h3 className=\"cd-headline clip is-full-width\">\n                        <span>Lorem Ipsum Dolor Sit Amet </span>\n                        <div className=\"btn-ber\">\n                            <a className=\"get_btn hvr-bounce-to-top\" href=\"#\">Get started</a>\n                            <a className=\"learn_btn hvr-bounce-to-top\" href=\"#\">Learn More</a>\n                        </div>\n                    </h3>\n                </div>\n            </section>\n\n\n            <div className=\"container login\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 col-md-offset-3\">\n                        <h2>Login Form</h2>\n                        <form className=\"login\" onSubmit={handleFormSubmit}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleInputEmail1\">Email</label>\n                                <input\n                                    onChange={handleInputChange}\n                                    type=\"text\"\n                                    name=\"email\"\n                                    className=\"form-control\"\n                                    placeholder=\"Username\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleInputPassword1\">Password</label>\n                                <input\n                                    onChange={handleInputChange}\n                                    type=\"password\"\n                                    name=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Password\" />\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-default\">Login</button>\n                        </form>\n                        <h3>Not a member? <a href=\"/signup\">Sign up here</a></h3>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default LoginForm;","import React from \"react\";\nimport LoginForm from  \"../forms/login/loginForm\";\n\nfunction Login() {\n    return (\n        <div>\n            <LoginForm />\n        </div>\n    )\n}\n\nexport default Login;","import React, { useEffect, useState } from \"react\";\nimport api from \"../utils/api\";\nimport \"./styling.css\";\n\nfunction Profile() {\n    const [user, setUser] = useState({});\n\n    useEffect(() => {\n        api.currentUser()\n            .then((user) => {\n                setUser(user.data);\n            })\n    }, []);\n\n    return (\n        <div>\n            <nav class=\"navbar navbar-expand-lg navbar-dark fixed-top\" id=\"mainNav\">\n                <div class=\"container\">\n                    <a class=\"navbar-brand js-scroll-trigger\" href=\"#page-top\">\n                        <img class=\"img-fluid\" src=\"images/logo.png\" alt=\"\" />\n                    </a>\n                    <button class=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        Menu\n          <i class=\"fa fa-bars\"></i>\n                    </button>\n                    <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n                        <ul class=\"navbar-nav text-uppercase ml-auto\">\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link js-scroll-trigger active\" href=\"#home\">Home</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link js-scroll-trigger\" href=\"#about\">About Us</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link js-scroll-trigger\" href=\"#services\">Services</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link js-scroll-trigger\" href=\"#portfolio\">Portfolio</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link js-scroll-trigger\" href=\"#blog\">Blog</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link js-scroll-trigger\" href=\"#team\">Our Team</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link js-scroll-trigger\" href=\"#pricing\">Pricing</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link js-scroll-trigger\" href=\"#contact\">Contect Us</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n            {/* <div>\n                Welcome {user.firstName}\n            </div>\n            <div>\n                {user.email}\n\n            </div> */}\n        </div>\n    )\n}\n\nexport default Profile;","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport SignUp from \"./pages/signUp\";\nimport Login from \"./pages/login\";\nimport Profile from \"./pages/profile\";\n\nimport './App.css';\nimport api from \"./utils/api\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    api.currentUser()\n      .then((user) => {\n        if (user) {\n          setIsLoggedIn(true);\n        }\n        setIsLoading(false);\n      })\n  }, []);\n\n  if (isLoading) {\n    return null;\n  }\n\n  return (\n    <div>\n      <Router>\n        <Switch>\n          <Route exact path =\"/signup\" component={SignUp} />\n          <Route path = \"/login\" component={Login} />\n          <Route path = \"/profile\">\n            { isLoggedIn ? <Profile /> : <Redirect to=\"/login\" /> }\n          </Route>\n          <Route component={Login} />\n        </Switch> \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App /> \n    </React.StrictMode>, document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}